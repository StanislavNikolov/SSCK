#!/bin/bash

tmpfile=`mktemp`
sstmp=`mktemp` # system status tmp file
task=$2

declare -A timeLimit

while read i; do
	first=`echo $i | awk '{print \$1}'`
	second=`echo $i | awk '{print \$2}'`
	timeLimit[$first]=$second
done < checkers/settings/time_limit;

maxPoints=0
fails=0

function fail_timeout {
	echo -n "`basename $1`: <font color=\"brown\">Timeout</font>"
	fails=$((fails+1))
}

function fail_wrong {
	echo -n "`basename $1`: <font color=\"brown\">Wrong answer</font>"
	fails=$((fails+1))
}

function prn_ok {
	echo -n "`basename $1`: <font color=\"green\">OK</font>"
}

for test in checkers/tests/$task/tests/*.in
do
	str="`basename -s .in $test`"
	if [[ ! $str =~ ".00" ]]
	then
		maxPoints=$((maxPoints+1))
		if timeout ${timeLimit[$task]} sh -c "TIMEFORMAT=%3R; time ($1 < $test &> $tmpfile) &> $sstmp"
		then
			out=`basename -s .in $test`.sol
			(diff -qb checkers/tests/$task/tests/$out $tmpfile > /dev/null && prn_ok $test && echo -n " - `cat $sstmp` seconds. ") || fail_wrong $test
		else
			fail_timeout $test
		fi
		echo ""
	fi
done;

succsessful=$((maxPoints-$fails))
output=`python -c "print(round(100 / $maxPoints * $succsessful))"`
printf "<h2> Result: %d - %d/%d <h2>\n" $output $succsessful $maxPoints

# The line after __SSCK_RES_PACK__ is the actual score showed on the results
echo "__SSCK_RES_PACK__"
echo $output

rm $tmpfile
rm $sstmp
